apply plugin: 'java'
apply plugin: 'cobertura'
apply plugin: 'idea'

sourceCompatibility = 1.7
version = '1.0'

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

buildscript {
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
    }
    repositories {
        maven {
            url 'http://182.140.210.215:8081/repository/maven-public/'
        }
        //jcenter()
    }

}

ext {
    slf4jVersion = '1.7.5'
    log4jVersion = '1.2.17'
}

repositories {
    maven {
        url 'http://182.140.210.215:8081/repository/maven-public/'
    }
}

    dependencies {
        compile "log4j:log4j:$log4jVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.1.5'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.1.5'
    compile 'info.cukes:cucumber-java:1.1.5'
    compile 'info.cukes:cucumber-core:1.1.5'
    compile 'org.seleniumhq.selenium:selenium-java:2.42.2'
    compile 'com.google.guava:guava:15.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile "com.github.detro:phantomjsdriver:1.2.0"
}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }

    }
}

test {
    exclude "**/**"
}

task integrationTest(type: Test) {
    include '**/**'
    doFirst {
//        apiDatabaseCleanAndMigration.execute()
    }
    doLast {

    }
}

//for chinexse language
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}